//TODO:This autogenerated class includes the basics for a Registration
//Handler class. You will need to customize it to ensure it meets your needs and
//the data provided by the third party.

@isTest (seeAllData = false)
private class NF_AutocreatedRegHandlerTest {

	static testmethod void testCanCreateUser(){
	NCP_CustomerCommunitySetting__c cs = new NCP_CustomerCommunitySetting__c();
		cs.Name = 'Default';
		cs.Customer_Account__c = 'Customer - test';
		cs.Customer_Account_Number__c = '12345';
		cs.Customer_User_Profile__c = 'Customers';
		insert cs;
		Auth.UserData data;
		Boolean canCreate;
		NF_AutocreatedRegHandler testClass = new NF_AutocreatedRegHandler();
		Test.startTest();
			canCreate = testClass.canCreateUser(data);
		Test.stopTest();
		System.assert(!canCreate);
	}
	
	static testmethod void testCreateUser(){
	NCP_CustomerCommunitySetting__c cs = new NCP_CustomerCommunitySetting__c();
		cs.Name = 'Default';
		cs.Customer_Account__c = 'Customer - test';
		cs.Customer_Account_Number__c = '12345';
		cs.Customer_User_Profile__c = 'Customers';
		insert cs;
		Auth.UserData data;
		User resultUser;
		NF_AutocreatedRegHandler testClass = new NF_AutocreatedRegHandler();
		Test.startTest();
			resultUser = testClass.createUser(null, data);
		Test.stopTest();
		System.assertEquals(null, resultUser);
	}

	static testmethod void testUpdateUser(){
	NCP_CustomerCommunitySetting__c cs = new NCP_CustomerCommunitySetting__c();
		cs.Name = 'Default';
		cs.Customer_Account__c = 'Customer - test';
		cs.Customer_Account_Number__c = '12345';
		cs.Customer_User_Profile__c = 'Customers';
		insert cs;
		Auth.UserData data = new Auth.UserData(null, 'James', 'Bond', 'James Bond', 'test2@nokia.com', null, null, null, null, null, null);
		User testUser = NF_TestDataFactory.createAdminUser('System Administrator');
		insert testUser;
		NF_AutocreatedRegHandler testClass = new NF_AutocreatedRegHandler();
		Test.startTest();
			testClass.updateUser(testUser.Id, null, data);
		Test.stopTest();
		List<User> resultUsers = [SELECT Email, LastName, FirstName FROM User WHERE Id =: testUser.Id];
		System.assertEquals(1, resultUsers.size());
		System.assertEquals('test2@nokia.com', resultUsers[0].Email);
		System.assertEquals('Bond', resultUsers[0].LastName);
		System.assertEquals('James', resultUsers[0].FirstName);
	}
}